package com.palm360.airport.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.palm360.airport.util.stereotype.NoCache;

public class AirportExample extends BaseModel implements Serializable{
    /**
	 * 
	 */
	@NoCache
	private static final long serialVersionUID = 6907657449399997852L;

	/**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table AirPort
     *
     * @abatorgenerated Fri May 18 11:00:01 CST 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table AirPort
     *
     * @abatorgenerated Fri May 18 11:00:01 CST 2012
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AirPort
     *
     * @abatorgenerated Fri May 18 11:00:01 CST 2012
     */
    public AirportExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AirPort
     *
     * @abatorgenerated Fri May 18 11:00:01 CST 2012
     */
    protected AirportExample(AirportExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AirPort
     *
     * @abatorgenerated Fri May 18 11:00:01 CST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AirPort
     *
     * @abatorgenerated Fri May 18 11:00:01 CST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AirPort
     *
     * @abatorgenerated Fri May 18 11:00:01 CST 2012
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AirPort
     *
     * @abatorgenerated Fri May 18 11:00:01 CST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AirPort
     *
     * @abatorgenerated Fri May 18 11:00:01 CST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AirPort
     *
     * @abatorgenerated Fri May 18 11:00:01 CST 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table AirPort
     *
     * @abatorgenerated Fri May 18 11:00:01 CST 2012
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table AirPort
     *
     * @abatorgenerated Fri May 18 11:00:01 CST 2012
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andAirportidIsNull() {
            addCriterion("AirPortID is null");
            return this;
        }

        public Criteria andAirportidIsNotNull() {
            addCriterion("AirPortID is not null");
            return this;
        }

        public Criteria andAirportidEqualTo(Integer value) {
            addCriterion("AirPortID =", value, "airportid");
            return this;
        }

        public Criteria andAirportidNotEqualTo(Integer value) {
            addCriterion("AirPortID <>", value, "airportid");
            return this;
        }

        public Criteria andAirportidGreaterThan(Integer value) {
            addCriterion("AirPortID >", value, "airportid");
            return this;
        }

        public Criteria andAirportidGreaterThanOrEqualTo(Integer value) {
            addCriterion("AirPortID >=", value, "airportid");
            return this;
        }

        public Criteria andAirportidLessThan(Integer value) {
            addCriterion("AirPortID <", value, "airportid");
            return this;
        }

        public Criteria andAirportidLessThanOrEqualTo(Integer value) {
            addCriterion("AirPortID <=", value, "airportid");
            return this;
        }

        public Criteria andAirportidIn(List values) {
            addCriterion("AirPortID in", values, "airportid");
            return this;
        }

        public Criteria andAirportidNotIn(List values) {
            addCriterion("AirPortID not in", values, "airportid");
            return this;
        }

        public Criteria andAirportidBetween(Integer value1, Integer value2) {
            addCriterion("AirPortID between", value1, value2, "airportid");
            return this;
        }

        public Criteria andAirportidNotBetween(Integer value1, Integer value2) {
            addCriterion("AirPortID not between", value1, value2, "airportid");
            return this;
        }

        public Criteria andCountyidIsNull() {
            addCriterion("CountyID is null");
            return this;
        }

        public Criteria andCountyidIsNotNull() {
            addCriterion("CountyID is not null");
            return this;
        }

        public Criteria andCountyidEqualTo(Integer value) {
            addCriterion("CountyID =", value, "countyid");
            return this;
        }

        public Criteria andCountyidNotEqualTo(Integer value) {
            addCriterion("CountyID <>", value, "countyid");
            return this;
        }

        public Criteria andCountyidGreaterThan(Integer value) {
            addCriterion("CountyID >", value, "countyid");
            return this;
        }

        public Criteria andCountyidGreaterThanOrEqualTo(Integer value) {
            addCriterion("CountyID >=", value, "countyid");
            return this;
        }

        public Criteria andCountyidLessThan(Integer value) {
            addCriterion("CountyID <", value, "countyid");
            return this;
        }

        public Criteria andCountyidLessThanOrEqualTo(Integer value) {
            addCriterion("CountyID <=", value, "countyid");
            return this;
        }

        public Criteria andCountyidIn(List values) {
            addCriterion("CountyID in", values, "countyid");
            return this;
        }

        public Criteria andCountyidNotIn(List values) {
            addCriterion("CountyID not in", values, "countyid");
            return this;
        }

        public Criteria andCountyidBetween(Integer value1, Integer value2) {
            addCriterion("CountyID between", value1, value2, "countyid");
            return this;
        }

        public Criteria andCountyidNotBetween(Integer value1, Integer value2) {
            addCriterion("CountyID not between", value1, value2, "countyid");
            return this;
        }

        public Criteria andAirportnameIsNull() {
            addCriterion("AirPortName is null");
            return this;
        }

        public Criteria andAirportnameIsNotNull() {
            addCriterion("AirPortName is not null");
            return this;
        }

        public Criteria andAirportnameEqualTo(String value) {
            addCriterion("AirPortName =", value, "airportname");
            return this;
        }

        public Criteria andAirportnameNotEqualTo(String value) {
            addCriterion("AirPortName <>", value, "airportname");
            return this;
        }

        public Criteria andAirportnameGreaterThan(String value) {
            addCriterion("AirPortName >", value, "airportname");
            return this;
        }

        public Criteria andAirportnameGreaterThanOrEqualTo(String value) {
            addCriterion("AirPortName >=", value, "airportname");
            return this;
        }

        public Criteria andAirportnameLessThan(String value) {
            addCriterion("AirPortName <", value, "airportname");
            return this;
        }

        public Criteria andAirportnameLessThanOrEqualTo(String value) {
            addCriterion("AirPortName <=", value, "airportname");
            return this;
        }

        public Criteria andAirportnameLike(String value) {
            addCriterion("AirPortName like", value, "airportname");
            return this;
        }

        public Criteria andAirportnameNotLike(String value) {
            addCriterion("AirPortName not like", value, "airportname");
            return this;
        }

        public Criteria andAirportnameIn(List values) {
            addCriterion("AirPortName in", values, "airportname");
            return this;
        }

        public Criteria andAirportnameNotIn(List values) {
            addCriterion("AirPortName not in", values, "airportname");
            return this;
        }

        public Criteria andAirportnameBetween(String value1, String value2) {
            addCriterion("AirPortName between", value1, value2, "airportname");
            return this;
        }

        public Criteria andAirportnameNotBetween(String value1, String value2) {
            addCriterion("AirPortName not between", value1, value2, "airportname");
            return this;
        }
    }
}
