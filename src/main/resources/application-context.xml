<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task" xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd  
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd  
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd  
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.1.xsd  
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.1.xsd  
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd  
        http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd  
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd">

	<description></description>

	<context:component-scan base-package="com.aero.o2o.service.impl">
		<context:include-filter expression="org.springframework.stereotype.Service"
			type="annotation" />
	</context:component-scan>

	<context:component-scan base-package="com.aero.o2o.web.Listener" />
	
	<context:component-scan base-package="com.aero.o2o.redis" />
	
	<context:component-scan base-package="com.aero.o2o.dao.impl">
		<context:include-filter expression="org.springframework.stereotype.Service"
			type="annotation" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
	</context:component-scan>
	
	<!-- 加载资源文件 -->
	<context:property-placeholder location="classpath*:application.properties"/>
	
	<context:annotation-config/>
	<!-- 
	 <import resource="mongo-config.xml"/>
	 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 多语言 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找 -->
				<value>
					classpath:message
                </value>
				<value>
					classpath:error
                </value>
				<value>
					classpath:ValidationMessages
                </value>
                <value>
                	classpath:SystemVariable
                </value>
			</list>
		</property>

		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="60" />
	</bean>

	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"></bean>

	<!-- Java Email 配置 -->
<!-- 	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> -->
<!-- 		<property name="username" value="${mail.username}" /> -->
<!-- 		<property name="password" value="${mail.password}" /> -->
<!-- 		<property name="defaultEncoding" value="utf8" /> -->
<!-- 		<property name="javaMailProperties"> -->
<!-- 			<props> -->
<!-- 				<prop key="mail.smtp.auth">true</prop> -->
<!-- 				<prop key="mail.transport.protocol">smtp</prop>   -->
<!--                 <prop key="mail.host">${mail.host}</prop>   -->
<!--                 <prop key="mail.smtp.port">${mail.port}</prop>   -->
<!-- 				<prop key="mail.smtp.socketFactory.port">${mail.port}</prop>   -->
<!--                 <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>   -->
<!--                 <prop key="mail.smtp.socketFactory.fallback">false</prop> -->
<!--                 <prop key="mail.smtp.starttls.enable">true</prop> -->
<!--                 <prop key="mail.smtp.quitwait">false</prop>   -->
<!-- 			</props> -->
<!-- 		</property> -->
<!-- 	</bean> -->

	<!-- ibatis config -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
	destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!--initialSize: 初始化连接-->
		<property name="initialSize" value="50" />
		<!--maxIdle: 最大空闲连接-->
		<property name="maxIdle" value="10" />
		<!--minIdle: 最小空闲连接-->
		<property name="minIdle" value="5" />
		<!--maxActive: 最大连接数量-->
		<property name="maxActive" value="150" />
		<!--removeAbandoned: 是否自动回收超时连接-->
		<property name="removeAbandoned" value="true" />
		<!--removeAbandonedTimeout: 超时时间(以秒数为单位)-->
		<property name="removeAbandonedTimeout" value="180" />
		<!--maxWait: 超时等待时间以毫秒为单位30000毫秒/1000等于30秒-->
		<property name="maxWait" value="30000" />
		<property name="validationQuery">
			<value>SELECT 1</value>
		</property>
		<property name="testOnBorrow">
			<value>true</value>
		</property>
	</bean>
	
	<!-- 事务处理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />

	</bean>

	<aop:config>
		<aop:pointcut id="baseServiceMethods"
			expression="execution(* com.aero.o2o.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="baseServiceMethods" />
	</aop:config>

	<aop:aspectj-autoproxy />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager"  >
		<tx:attributes>
			<tx:method name="select*" read-only="true" propagation="REQUIRED" />
			<tx:method name="find*" read-only="true" propagation="REQUIRED" />
			<tx:method name="register*" read-only="false" propagation="REQUIRED"  rollback-for="com.aero.o2o.util.exception.AirportRuntimeException, SQLException" />
			<tx:method name="save*" propagation="REQUIRED" isolation="REPEATABLE_READ" rollback-for="com.aero.o2o.util.exception.AirportRuntimeException, SQLException" />
			<tx:method name="insert*" propagation="REQUIRED" isolation="REPEATABLE_READ" rollback-for="com.aero.o2o.util.exception.AirportRuntimeException, SQLException" />
			<tx:method name="update*" propagation="REQUIRED" isolation="REPEATABLE_READ" rollback-for="com.aero.o2o.util.exception.AirportRuntimeException, SQLException" />
			<tx:method name="add*" propagation="REQUIRED" isolation="REPEATABLE_READ" rollback-for="com.aero.o2o.util.exception.AirportRuntimeException, SQLException" />
			<tx:method name="delete*" propagation="REQUIRED" isolation="REPEATABLE_READ" rollback-for="com.aero.o2o.util.exception.AirportRuntimeException, SQLException" />
		</tx:attributes>
	</tx:advice>
	
	<!-- Spring iBatis SqlMapClient -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:SqlMapConfig.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 配置redis -->
<!-- 	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"> -->
<!-- 		<property name="maxActive" value="5000" /> -->
<!-- 		<property name="maxIdle" value="5000" /> -->
<!-- 		<property name="maxWait" value="10000" /> -->
<!-- 		<property name="testOnBorrow" value="true" /> -->
<!-- 	</bean> -->
	
	<!-- jedis信息配置 -->
<!-- 	<bean id="jedis" class="redis.clients.jedis.Jedis"> -->
<!-- 		<constructor-arg index="0" value="${redis.server}" /> -->
<!-- 		<constructor-arg index="1" value="${redis.port}" /> -->
<!-- 	</bean> -->
	
	<!-- jedis pool配置 -->
<!-- 	<bean id="jedisPool" class="redis.clients.jedis.JedisPool"> -->
<!-- 		<constructor-arg index="0" ref="jedisPoolConfig" /> -->
<!-- 		<constructor-arg index="1" value="${redis.server}" /> -->
<!-- 		<constructor-arg index="2" value="${redis.port}" /> -->
<!-- 	</bean> -->
	
	<!-- 包装类 -->
<!-- 	<bean id="redisUtil" class="com.aero.o2o.redis.RedisUtil"> -->
<!-- 		<property name="jedisPool" ref="jedisPool" /> -->
<!-- 	</bean> -->
<!-- 	<bean id="redisUtilEx" class="com.aero.o2o.redis.RedisUtilEx"> -->
<!-- 		<property name="edis" ref="redisUtil" /> -->
<!-- 	</bean> -->
	
	<bean id="errorBundleReader" class="com.aero.o2o.util.ErrorBundleReader">
		<property name="messageSource" ref="messageSource">
		</property>
	</bean>

	<!-- 配置异常处理 -->
<!-- 	<bean class="com.aero.o2o.util.exception.AirportExceptionResolver"> -->

		<!-- 定义默认的异常处理页面，当该异常类型的注册时使用 -->
		<!-- <property name="defaultErrorView" value="error"></property>  -->
		<!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception -->
		<!--<property name="exceptionAttribute" value="ex"></property>  -->

		<!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 -->
		<!--
			<property name="exceptionMappings"> <props> <prop
			key="IOException">error/ioexp</prop> <prop
			key="java.sql.SQLException">error/sqlexp</prop> </props> </property>
		-->
<!-- 	</bean> -->
</beans>